
AWSTemplateFormatVersion: '2010-09-09'
Description: Creates a RedShift cluster within a VPC.  **WARNING** This template creates
  an Amazon Redshift cluster of the size and instance type that you specify. You will
  be billed for the AWS resources used if you create a stack from this template.
  
Parameters:

  VPC:
    Type: String
    Description: ID of the Cage's Virtual Private Cloud
    Type: AWS::EC2::VPC::Id
    
  PrivateSubnet1:
    Type: String
    Description: First SubnetId of an existing subnet in your Virtual Private Cloud (VPC)
    Type: AWS::EC2::Subnet::Id
    
  PrivateSubnet2:
    Type: String
    Description: Second SubnetId of an existing subnet in your Virtual Private Cloud (VPC)
    Type: AWS::EC2::Subnet::Id
    
  InboundTraffic:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/x"
    Description: "Allowed CIDR block to access Redshift cluster."
    Type: String
    
  RedshiftDBName:
    Description: The name of the first database to be created when the redshift cluster
      is created
    Type: String
    Default: rsdev01
    AllowedPattern: "([a-z]|[0-9])+"
    ConstraintDescription: must contain a-z or 0-9 only.
    
  RedshiftDBPort:
    Description: 'The port that Redshift will listen on and that will be allowed through
      the Security Group. '
    Type: String
    Default: '8200'
    
  NumberOfNodes:
    Description: The nuber of compute nodes in the redshift cluster.  When cluster
      type is specified as single-node, the NumberOfNodes parameter should be specified
      as 1.  When cluster type is specified as multi-node, the NumberOfNodes parameter
      should be greater than 1
    Type: Number
    Default: '2'
    
  NodeType:
    Description: The node type to be provisioned for the redshift cluster
    Type: String
    Default: dc2.large
    AllowedValues:
      - dc2.large
      - dc2.8xlarge
      - ds2.xlarge
      - ds2.8xlarge
    ConstraintDescription: must be a valid RedShift node type.
    
  MasterUsername:
    Description: The user name associated with the master user account for the redshift
      cluster that is being created
    Type: String
    AllowedPattern: "([a-z])([a-z]|[0-9])*"
    Default: rsadmin
    ConstraintDescription: must start with a-z and contain only a-z or 0-9.
    
  MasterUserPassword:
    Description: 'The password associated with the master user account for the redshift
      cluster that is being created. '
    Type: String
    NoEcho: 'true'
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: >-
     ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?!._*[@/\\\"']).*$
    ConstraintDescription: must contain only alphanumeric characters.
  
  Maintenancewindow:
    Description: Maintenance Window for Redshift Cluster
    Type: String
    Default: 'sat:05:00-sat:05:30'
        
  MaxConcurrentCluster:
    Description: Maximum Concurrency Scaling Redshift Clusters
    Type: String
    Default: '1'
    
  EncryptionAtRest:
    Description: "Do you want to encrypt database at rest?"
    Type: String
    Default: 'false'
    AllowedValues:
      - true
      - false
    ConstraintDescription: must be true or false.
  
  kmskey:
    Description: Existing KMS key ID
    Type: String
    Default: ''
    
  SnapshotIdentifier:
    Description: Leave it blank for new cluster. Enter Snapshot Identifier only if you want to restore from snapshot. 
    Type: String
    
  SnapshotAccountNumber:
    Description: "AWS Account number of Snapshot (Leave it blank, if snapshot is created in current AWS Account)"
    Type: String
    
  NotificationList:
    Type: String
    Description: The Email notification list is used to configure a SNS topic for sending cloudwatch alarm and event notifications
    Default: "abc@xyz.com"
    AllowedPattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
    ConstraintDescription: provide a valid email address.
    
  EnableLoggingToS3:
    Default: 'false'
    Type: String
    AllowedValues:
      - true
      - false
    Description: "Do you want to enable logging to S3 bucket?"
    
  ParentStackName:
    Type: String
    Description: "Enter parent Stack name, if applicable"
    
  S3BucketForRedshiftIAMRole:
    Type: String
    Description: "Enter existing S3 Bucket contains dataset. IAM role will be created and associated to the Redshift cluster with GET and LIST access to this bucket."
              
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network Configuration
      Parameters:
      - VPC
      - PrivateSubnet1
      - PrivateSubnet2
      - InboundTraffic
    - Label:
        default: Amazon Redshift Configuration
      Parameters:
      - RedshiftDBName
      - NumberOfNodes
      - NodeType
      - RedshiftDBPort
      - MasterUsername
      - MasterUserPassword
      - EnableLoggingToS3
      - MaxConcurrentCluster
      - EncryptionAtRest
      - kmskey
      - S3BucketForRedshiftIAMRole
      - NotificationList
      - Maintenancewindow
      - SnapshotIdentifier
      - SnapshotAccountNumber
      
Mappings:
  RedshiftLoggingAccountIDRegionMap:
    us-east-1:
      RSAccountID: 193672423079
    us-east-2:
      RSAccountID: 391106570357
    us-west-1:
      RSAccountID: 262260360010
    us-west-2:
      RSAccountID: 902366379725
    ap-east-1:
      RSAccountID: 313564881002
    ap-south-1:
      RSAccountID: 865932855811
    ap-northeast-3:
      RSAccountID: 090321488786
    ap-northeast-2:
      RSAccountID: 760740231472
    ap-southeast-1:
      RSAccountID: 361669875840
    ap-southeast-2:
      RSAccountID: 762762565011
    ap-northeast-1:
      RSAccountID: 404641285394
    ca-central-1:
      RSAccountID: 907379612154
    cn-north-1:
      RSAccountID: 111890595117
    cn-northwest-1:
      RSAccountID: 660998842044
    eu-west-1:
      RSAccountID: 210876761215
    eu-central-1:
      RSAccountID: 053454850223
    eu-west-2:
      RSAccountID: 307160386991
    eu-west-3:
      RSAccountID: 915173422425
    eu-north-1:
      RSAccountID: 729911121831
    sa-east-1:
      RSAccountID: 075028567923
      
Conditions:

  RedshiftSingleNodeClusterCondition:
    Fn::Equals:
    - Ref: NumberOfNodes
    - '1'
  IsEncryptionAtRest: !Equals [!Ref EncryptionAtRest, 'true']
  IsEnableLoggingToS3: !Equals [!Ref EnableLoggingToS3, 'true']
  IsParentStackName:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: ParentStackName
  
  IsConfigureRedshiftIAMRole: 
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: S3BucketForRedshiftIAMRole
  IsSnapshotSpecified:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: SnapshotIdentifier
  IsSnapshotAccountSpecified:
    Fn::Not:
    - Fn::Equals:
      - ''
      - Ref: SnapshotAccountNumber
      
Resources:

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Redshift Security group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref RedshiftDBPort
          ToPort: !Ref RedshiftDBPort
          CidrIp: 52.15.247.160/27
          Description: 'QuickSight CIDR'
        - IpProtocol: tcp
          FromPort: !Ref RedshiftDBPort
          ToPort: !Ref RedshiftDBPort
          CidrIp: 52.23.63.224/27
          Description: 'QuickSight CIDR'
        - IpProtocol: tcp
          FromPort: !Ref RedshiftDBPort
          ToPort: !Ref RedshiftDBPort
          CidrIp: 54.70.204.128/27
          Description: 'QuickSight CIDR'
        - IpProtocol: tcp
          FromPort: !Ref RedshiftDBPort
          ToPort: !Ref RedshiftDBPort
          CidrIp: 52.210.255.224/27
          Description: 'QuickSight CIDR'
        - IpProtocol: tcp
          FromPort: !Ref RedshiftDBPort
          ToPort: !Ref RedshiftDBPort
          CidrIp: 13.229.254.0/27
          Description: 'QuickSight CIDR'
        - IpProtocol: tcp
          FromPort: !Ref RedshiftDBPort
          ToPort: !Ref RedshiftDBPort
          CidrIp: 54.153.249.96/27
          Description: 'QuickSight CIDR'
        - IpProtocol: tcp
          FromPort: !Ref RedshiftDBPort
          ToPort: !Ref RedshiftDBPort
          CidrIp: 13.113.244.32/27
          Description: 'QuickSight CIDR'
        - IpProtocol: tcp
          FromPort: !Ref RedshiftDBPort
          ToPort: !Ref RedshiftDBPort
          CidrIp: !Ref InboundTraffic
          Description: 'Redshift Access to CIDR'
                                 
  RedshiftLoggingS3Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Condition: IsEnableLoggingToS3
    Properties:
      LifecycleConfiguration:
        Rules:
        - Id: RedshiftLogsArchivingToGlacier
          Status: Enabled
          ExpirationInDays: '30'
          Transitions:
            - TransitionInDays: '14'
              StorageClass: Glacier
            
  RedshiftLoggingS3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Condition: IsEnableLoggingToS3
    Properties:
      Bucket: !Ref RedshiftLoggingS3Bucket
      PolicyDocument: 
        Statement:
        - Principal:
            AWS: !Join [ '', ['arn:aws:iam::', !FindInMap [RedshiftLoggingAccountIDRegionMap, !Ref 'AWS::Region', RSAccountID ] ,':user/logs']]
          Effect: Allow
          Action: 's3:GetBucketAcl'
          Resource: !Sub '${RedshiftLoggingS3Bucket.Arn}'
        - Principal:
            AWS: !Join [ '', ['arn:aws:iam::', !FindInMap [RedshiftLoggingAccountIDRegionMap, !Ref 'AWS::Region', RSAccountID ] ,':user/logs']]
          Effect: Allow
          Action: 's3:PutObject'
          Resource: !Sub '${RedshiftLoggingS3Bucket.Arn}/AWSLogs/*'
            
  RedshiftClusterParameterGroup:
    Type: 'AWS::Redshift::ClusterParameterGroup'
    Properties:
      Description: !Join [ " ", [ !If [IsParentStackName, !Ref ParentStackName, !Ref 'AWS::StackName'], " - Redshift Cluster Parameter group" ]] 
      ParameterGroupFamily: redshift-1.0
      Parameters:
        - ParameterName: enable_user_activity_logging
          ParameterValue: 'false'
        - ParameterName: require_ssl
          ParameterValue: 'true'
        - ParameterName: auto_analyze
          ParameterValue: 'true'
        - ParameterName: statement_timeout
          ParameterValue: '7200000'
        - ParameterName: max_concurrency_scaling_clusters
          ParameterValue: !Ref MaxConcurrentCluster
        - ParameterName: "wlm_json_configuration"
          ParameterValue: "[ {\"query_group\" : [ ], \"query_group_wild_card\" : 0, \"user_group\" : [ ], \"user_group_wild_card\" : 0, \"concurrency_scaling\" : \"auto\", \"auto_wlm\" : true}, {\"short_query_queue\" : true} ]"
      
        
  ClusterSubnetGroup:
    Type: AWS::Redshift::ClusterSubnetGroup
    Properties:
      Description: RedshiftClusterSubnetGroup
      SubnetIds:
      - !Ref PrivateSubnet1
      - !Ref PrivateSubnet2

  RedshiftCluster:
    Type: 'AWS::Redshift::Cluster'
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot
    DependsOn: ClusterSubnetGroup
    Properties:
      ClusterType: !If [RedshiftSingleNodeClusterCondition, "single-node", "multi-node"]
      ClusterIdentifier: !Join ["-", [!If [IsParentStackName, !Ref ParentStackName, !Ref 'AWS::StackName'], !Ref RedshiftDBName]]
      NumberOfNodes: !If [RedshiftSingleNodeClusterCondition, !Ref "AWS::NoValue", !Ref NumberOfNodes]
      NodeType: !Ref NodeType
      DBName: !Ref RedshiftDBName
      KmsKeyId: !If [IsEncryptionAtRest, !Ref kmskey, !Ref "AWS::NoValue"]
      Encrypted: !Ref EncryptionAtRest
      Port: !Ref RedshiftDBPort
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Ref MasterUserPassword
      ClusterParameterGroupName: !Ref RedshiftClusterParameterGroup
      SnapshotIdentifier: !If [IsSnapshotSpecified, !Ref SnapshotIdentifier, !Ref "AWS::NoValue"]
      OwnerAccount: !If [IsSnapshotAccountSpecified, !Ref SnapshotAccountNumber, !Ref "AWS::NoValue"]
      VpcSecurityGroupIds:
        - !Ref SecurityGroup
      PreferredMaintenanceWindow: !Ref Maintenancewindow
      AutomatedSnapshotRetentionPeriod: 14
      PubliclyAccessible: 'false'
      ClusterSubnetGroupName: !Ref ClusterSubnetGroup
      LoggingProperties: !If 
          - IsEnableLoggingToS3
          - BucketName: !Ref RedshiftLoggingS3Bucket
            S3KeyPrefix: 'AWSLogs'
          - !Ref 'AWS::NoValue'
      IamRoles:
          - !If 
              - IsConfigureRedshiftIAMRole
              - !GetAtt RedshiftIAMRole.Arn
              - !Ref 'AWS::NoValue'

  RedshiftIAMRole:
    Type: 'AWS::IAM::Role'
    Condition: IsConfigureRedshiftIAMRole
    Properties:
      RoleName: !Join [ "-", [  !If [IsParentStackName, !Ref ParentStackName, !Ref 'AWS::StackName'] , "RedshiftSpectrumRole"] ]
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "redshift.amazonaws.com"
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: !Join [ "-", [ !If [IsParentStackName, !Ref ParentStackName, !Ref 'AWS::StackName'] , "Spectrum-Glue-Access-Policy"] ]
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                    - s3:GetBucketLocation
                    - s3:GetObject
                    - s3:ListMultipartUploadParts
                    - s3:ListBucket
                    - s3:ListBucketMultipartUploads
                Resource:
                    - !Join ['', ["arn:aws:s3:::", !Ref S3BucketForRedshiftIAMRole]]
                    - !Join ['', ["arn:aws:s3:::", !Ref S3BucketForRedshiftIAMRole, "/*"]]
              -
                Effect: Allow
                Action:
                    - glue:CreateDatabase
                    - glue:DeleteDatabase
                    - glue:GetDatabase
                    - glue:GetDatabases
                    - glue:UpdateDatabase
                    - glue:CreateTable
                    - glue:DeleteTable
                    - glue:BatchDeleteTable
                    - glue:UpdateTable
                    - glue:GetTable
                    - glue:GetTables
                    - glue:BatchCreatePartition
                    - glue:CreatePartition
                    - glue:DeletePartition
                    - glue:BatchDeletePartition
                    - glue:UpdatePartition
                    - glue:GetPartition
                    - glue:GetPartitions
                    - glue:BatchGetPartition
                    - logs:*
                Resource:
                    - "*"
        
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Endpoint: !Ref NotificationList
        Protocol: email
            
  DiskSpacealarmredshift:
    Type: 'AWS::CloudWatch::Alarm'
    DependsOn: RedshiftCluster
    Properties:
      MetricName: !Join 
        - ''
        - - !Ref RedshiftCluster
          - High-PercentageDiskSpaceUsed
      AlarmDescription: !Join 
        - ''
        - - DiskSpace Utilization > 85% for
          - !Ref RedshiftCluster
      Namespace: AWS/Redshift
      Statistic: Average
      Period: '300'
      EvaluationPeriods: '3'
      Threshold: '85'
      AlarmActions:
        - !Ref SNSTopic
      Dimensions:
        - Name: ClusterIdentifier
          Value: !Ref RedshiftCluster
      ComparisonOperator: GreaterThanThreshold
      Unit: Percent
        
Outputs:

  RedshiftHost:
    Value:
      Fn::GetAtt:
      - RedshiftCluster
      - Endpoint.Address
    Description: Redshift Cluster host
    
  RedshiftDBPort:
    Value:
      Fn::GetAtt:
      - RedshiftCluster
      - Endpoint.Port
    Description: Redshift Cluster host
    
  RedshiftDBName:
    Value:
      Ref: RedshiftDBName
      
  RedshiftDBUsername:
    Value:
      Ref: MasterUsername
      
  RedshiftDBUserPassword:
    Value:
      Ref: MasterUserPassword
      
  RedshiftClusterId:
    Value:
      Ref: RedshiftCluster
    
  RedshiftParameterGroupName:
    Description: Name of the Redshift Parameter Group
    Value: !Ref RedshiftClusterParameterGroup
    
  RedshiftLoggingS3Bucket:
    Description: Amazon S3 bucket created for Redshift Logging
    Condition: IsEnableLoggingToS3
    Value: !Ref RedshiftLoggingS3Bucket
      
  RedshiftClusterIAMRole:
    Description: IAM Role assigned to Redshift cluster
    Condition: IsConfigureRedshiftIAMRole
    Value: !GetAtt RedshiftIAMRole.Arn
    
  PSQLCommandLine:    
    Description: PSQL Command Line
    Value: !Join
             - ''
             - - 'psql -h '
               - !GetAtt 'RedshiftCluster.Endpoint.Address' 
               - ' -p '
               - !GetAtt 'RedshiftCluster.Endpoint.Port'
               - ' -U '
               - !Ref MasterUsername
               - ' -d '
               - !Ref RedshiftDBName
