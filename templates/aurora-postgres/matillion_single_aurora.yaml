Description: 'Matillion ETL CloudFormation: Single-Node Enterprise with existing AWS
  resources'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: End User License Agreement (EULA) - Matillion ETL for Redshift
      Parameters:
      - AcceptedEULA
    - Label:
        default: Networking and Security configuration
      Parameters:
      - VPCID
      - PublicSubnet1
      - PublicSubnet2
      - PrivateSubnet1
      - PrivateSubnet2
      - RemoteAccessCIDR
    - Label:
        default: Matillion EC2 Instance configuration 
      Parameters:
      - MatillionEC2InstanceType
      - KeyPairName
    - Label:
        default: Matillion Aurora/Postgres repository configuration
      Parameters:
      - PGEngineVersion
      - PGInstanceClass
      - PGDBName
      - PGDBPort
      - PGMasterUsername
      - PGMasterUserPassword
      - NotificationList
    - Label:
        default: Tag identifiers
      Parameters:
      - TagEnvironment
    - Label:
        default: AWS Quick Start configuration 
      Parameters:
      - QSS3BucketName
      - QSS3KeyPrefix

    ParameterLabels:
      AcceptedEULA:
        default: Have you accepted EULA from AWS Marketplace link https://aws.amazon.com/marketplace/pp/B010ED5YF8?
      VPCID:
        default: VPC CIDR
      PrivateSubnet1:
        default: Private Subnet 1 CIDR
      PrivateSubnet2:
        default: Private Subnet 2 CIDR
      PublicSubnet1:
        default: Public Subnet 1 CIDR
      PublicSubnet2:
        default: Public Subnet 2 CIDR
      RemoteAccessCIDR:
        default: Allowed external access CIDR
      MatillionEC2InstanceType:
        default: Matillion EC2 instance type
      KeyPairName:
        default: Keypair name
      PGDBName:
        default: Aurora/PostgreSQL database name
      PGDBPort:
        default: Aurora/PostgreSQL database Port
      PGMasterUsername:
        default: Aurora/PostgreSQL master username
      PGMasterUserPassword:
        default: Aurora/PostgreSQL master password
      PGEngineVersion:
        default: Aurora/PostgreSQL engine eersion
      PGInstanceClass:
        default: Aurora/PostgreSQL instance class
      NotificationList:
         default: Email address for SNS notifications
      TagEnvironment:
        default: Environment
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
        
Parameters:
    
  AcceptedEULA: 
    AllowedValues: 
      - "Yes"
      - "No"
    Default: "No"
    Description: >- 
        PLEASE READ EULA (https://redshift-support.matillion.com/s/article/2845300) CAREFULLY BEFORE USING THE SOFTWARE.
        Matillion stack can be created only if you have already accepted the EULA of using Matillion ETL for Redshift.
        For accepting EULA, visit AWS marketplace link - https://aws.amazon.com/marketplace/pp/B010ED5YF8.     
    Type: String
  VPCID:
    Description: "Enter existing VPC-ID. This must be the VPC containing the subnet(s)."
    Type: AWS::EC2::VPC::Id
  PublicSubnet1:
    Description: "An existing Public subnet 1 to launch the Matillion ec2 instance(s) into."
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2:
    Description: "An existing Public subnet 2 to launch the Matillion ec2 instance(s) into."
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet1:
    Description: "An existing Private subnet 1 to launch secondary resources, e.g. Postgres database."
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2:
    Description: "An existing Private subnet 2 to launch secondary resources, e.g. Postgres database."
    Type: AWS::EC2::Subnet::Id
  KeyPairName:
    Description: "The selected key pair will be added to the set of keys authorized for Ec2 instance."
    Type: AWS::EC2::KeyPair::KeyName
  RemoteAccessCIDR:
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/x"
    Description: "Allowed CIDR block for external SSH access."
    Type: String
  MatillionEC2InstanceType:
    AllowedValues:
    - m5.large
    - m5.xlarge
    - m3.medium
    - t2.medium
    - t3.medium
    - m3.large
    - m4.large
    - m5.large
    - r3.large
    - r4.large
    - m3.xlarge
    - m4.xlarge
    - m5.xlarge
    - r3.xlarge
    - r4.xlarge
    - t3.xlarge
    - x1e.xlarge
    - m5.2xlarge
    - r3.2xlarge
    Default: m4.large
    Description: "Amazon EC2 instance type for Matillion instance. Larger instance type allows running more concurrent workload. See https://www.matillion.com/pricing/etl-for-redshift/ for more info."
    Type: String
    
  PGDBName:
    AllowedPattern: "([a-z]|[0-9])+"
    Default: matillion
    Description: Aurora/Postgres database name for Matillion repository
      repository.
    Type: String
    
  PGMasterUserPassword:
    AllowedPattern: '(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*'
    Description: "Aurora/Postgres master user password. Min 8 chars, must include 1 uppercase, 1 lowercase, 1 number, 1 (non / @ \" ') symbol"
    NoEcho: true
    Type: String
    
  PGDBPort:
    Default: 8201
    Description: The port number on which the Aurora/Postgres database accepts incoming connections.
      connections.
    MaxValue: 65535
    MinValue: 1150
    Type: Number
    
  PGMasterUsername:
    AllowedPattern: "^[a-zA-Z]{1}[a-z0-9]*"
    Default: matillion
    Description: The user name that is associated with the master user account for the Aurora DB that is being created.
    Type: String 
    
  PGEngineVersion:
    Description: Aurora/Postgres database engine version.
    Type: String
    Default: 9.6.12
    AllowedValues:
      - 9.6.12

  NotificationList:
    Type: String
    Default: 'db-ops@domain.com'
    Description: The Email notification is used to configure a SNS topic for sending cloudwatch alarm and RDS Event notifications.
    AllowedPattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
    ConstraintDescription: provide a valid email address.   
     
  PGInstanceClass:
    AllowedValues:
      - db.r5.large
      - db.r5.xlarge
      - db.r5.2xlarge
      - db.r5.4xlarge
      - db.r5.12xlarge
      - db.r5.24xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
    Default: db.r5.large
    Description: Aurora/Postgres database instance class.
    Type: String
    
  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Default: sudhig-cfn-templates
    Description: "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    Type: String
    
  QSS3KeyPrefix:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Default: quickstart-amazon-redshift/
    Description: "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    Type: String
    
  TagEnvironment:
    Type: String
    AllowedValues:
      - dev
      - test
      - pre-prod
      - prod
      - none
    Description: The environment tag is used to designate the Environment Stage of the associated AWS resource.
    Default: 'dev'
    
Conditions:
  IsGovCloud: !Equals 
    - !Ref 'AWS::Region'
    - us-gov-west-1
    
Mappings:
  RegionMap:
    ap-northeast-1:
      AMI: ami-0417324631060315c
    ap-northeast-2:
      AMI: ami-095457b40dfba1246
    ap-south-1:
      AMI: ami-0085ef1bb023d93d5
    ap-southeast-1:
      AMI: ami-0764f5731c0bf0fc1
    ap-southeast-2:
      AMI: ami-04ae5286260fa019b
    ca-central-1:
      AMI: ami-04a0243b56424c433
    eu-central-1:
      AMI: ami-0fe5b16e0c36af807
    eu-west-1:
      AMI: ami-07270cb27dafcd9b8
    eu-west-2:
      AMI: ami-0de9d2f8e3fd1d91d
    eu-west-3:
      AMI: ami-0635d4fbaf12fd39b
    us-gov-west-1:
      AMI: ami-3bbaf25a
    sa-east-1:
      AMI: ami-0e9f062d7600dfdb5
    us-east-1:
      AMI: ami-02d690b657fa3cc06
    us-east-2:
      AMI: ami-0fca2403098b186fa
    us-west-1:
      AMI: ami-09bcaec6d0fecbd60
    us-west-2:
      AMI: ami-08b4d9c6bcd5c3bf1
      
Resources:
    
  AuroraStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 
        - https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/aurora-postgres/aurora_postgres.template.yaml
        - QSS3Region: !If [IsGovCloud , s3-us-gov-west-1 , s3]
      Parameters:
        Subnet1ID: !Ref PrivateSubnet1
        Subnet2ID: !Ref PrivateSubnet2
        VPCID: !Ref VPCID
        DBName: !Ref PGDBName
        DBAutoMinorVersionUpgrade: 'true'
        DBAllocatedStorageEncrypted: 'true'
        DBBackupRetentionPeriod: '35'
        DBEngineVersion: !Ref PGEngineVersion
        DBInstanceClass: !Ref PGInstanceClass
        DBMasterUsername: !Ref PGMasterUsername
        DBMasterUserPassword: !Ref PGMasterUserPassword
        DBPort: !Ref PGDBPort
        DBMultiAZ: 'true'
        CustomDBSecurityGroup: ''
        EnableEventSubscription: 'true'
        NotificationList: !Ref NotificationList
        EnvironmentStage: !Ref TagEnvironment
        
  CDCRoleForDMS:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ["${RootStack}-CDCForDMS", RootStack: !Select [0, !Split ['-', !Ref 'AWS::StackName']]]
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - dms.amazonaws.com
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - s3:PutObject
            - s3:GetObject
            - s3:ListBucket
            Effect: Allow
            Resource: "*"
            Sid: CDCPermissionsForDMS
        PolicyName: !Sub ["${RootStack}-CDCPermissionsForDMS", RootStack: !Select [0, !Split ['-', !Ref 'AWS::StackName']]]
    
  CDCRoleForLambda:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ["${RootStack}-CDCForLambda", RootStack: !Select [0, !Split ['-', !Ref 'AWS::StackName']]]
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - s3:PutObject
            - s3:GetObject
            - s3:ListBucket
            - sqs:GetQueueUrl
            - sqs:SendMessage
            Effect: Allow
            Resource: "*"
            Sid: CDCPermissionsForLambda
        PolicyName: !Sub ["${RootStack}-CDCPermissionsForLambda", RootStack: !Select [0, !Split ['-', !Ref 'AWS::StackName']]]
    
  MatillionEc2Instance:
    DependsOn: AuroraStack
    Metadata:
      AWS::CloudFormation::Init:
        config:
          commands:
            setup:
              command: "/sbin/service tomcat8 stop && rm -r /var/log/tomcat8/catalina.out
                && /usr/share/emerald/WEB-INF/classes/scripts/matillion_ensure.sh
                && /sbin/service tomcat8 start"
          files:
            "/etc/awslogs/awscli.conf":
              content:
                Fn::Join:
                - ''
                - - "[plugins]\ncwlogs = cwlogs\n[default]\nregion = "
                  - Ref: AWS::Region
              group: root
              mode: '000644'
              owner: root
            "/etc/awslogs/awslogs.conf":
              content: |
                [general]
                state_file = /var/lib/awslogs/agent-state
                [/var/log/tomcat8/catalina.out]
                datetime_format = %d-%b-%Y %H:%M:%S.%f
                file = /var/log/tomcat8/catalina.out
                buffer_duration = 5000
                log_stream_name = {instance_id}
                initial_position = start_of_file
                log_group_name = Matillion-ETL
              group: root
              mode: '000644'
              owner: root
            "/etc/sysconfig/tomcat8":
              content:
                Fn::Join:
                - ''
                - - "export MTLN_PERSISTENCE_STORE_NAME=postgres \n"
                  - export MTLN_PERSISTENCE_USERNAME_POSTGRES=
                  - Ref: PGMasterUsername
                  - "\n"
                  - export MTLN_PERSISTENCE_PASSWORD_POSTGRES={enc:base64}
                  - Fn::Base64:
                      Ref: PGMasterUserPassword
                  - "\n"
                  - export MTLN_PERSISTENCE_URL_POSTGRES=
                  - Fn::Join:
                    - ''
                    - - jdbc:postgresql://
                      - Fn::GetAtt:
                        - AuroraStack
                        - Outputs.RDSEndPointAddress
                      - ":"
                      - Fn::GetAtt:
                        - AuroraStack
                        - Outputs.RDSEndPointPort
                      - "/"
                      - Ref: PGDBName
              group: root
              mode: '000644'
              owner: root
    Properties:
      IamInstanceProfile:
        Ref: MatillionEC2InstanceProfile
      ImageId:
        Fn::FindInMap:
        - RegionMap
        - Ref: AWS::Region
        - AMI
      InstanceType:
        Ref: MatillionEC2InstanceType
      KeyName:
        Ref: KeyPairName
      SecurityGroupIds:
      - Ref: MatillionEC2SecurityGroup
      SubnetId:
        Ref: PublicSubnet1
      Tags:
      - Key: Name
        Value: Matillion-ETL
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - "#!/bin/bash -xe \n"
            - "yum install -y awslogs xmlstarlet \n"
            - "chkconfig awslogs on \n"
            - "yum update -y aws-cfn-bootstrap \n"
            - "/opt/aws/bin/cfn-init -v "
            - " --stack "
            - Ref: AWS::StackName
            - " --resource "
            - MatillionEc2Instance
            - " --region "
            - Ref: AWS::Region
            - "\n"
            - "/opt/aws/bin/cfn-signal -e  $? "
            - " --stack "
            - Ref: AWS::StackName
            - " --resource "
            - MatillionEc2Instance
            - " --region "
            - Ref: AWS::Region
            - "\n"
            - "service awslogs start \n"
            
    Type: AWS::EC2::Instance
    
  MatillionEC2SecurityGroup:
    Properties:
      GroupDescription: MatillionEC2SecurityGroup
      SecurityGroupIngress:
      - 
          CidrIp: !Ref RemoteAccessCIDR 
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
      - 
          CidrIp: !Ref RemoteAccessCIDR 
          FromPort: 443
          ToPort: 443
          IpProtocol: tcp
      - 
          CidrIp: !Ref RemoteAccessCIDR 
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp
      VpcId:
        Ref: VPCID
    Type: AWS::EC2::SecurityGroup
    
  MatillionEC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - Ref: MatillionRole
    
  MatillionRole:
    Properties:
      RoleName: !Sub ["${RootStack}-MatillionRole", RootStack: !Select [0, !Split ['-', !Ref 'AWS::StackName']]]
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - redshift:DescribeClusters
            Effect: Allow
            Resource:
            - "*"
            Sid: StmtMinRedshift
          - Action:
            - s3:ListAllMyBuckets
            - s3:ListBucket
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
            - s3:GetBucketLocation
            Effect: Allow
            Resource:
            - "*"
            Sid: StmtMinS3
          - Action:
            - sqs:DeleteMessage
            - sqs:ListQueues
            - sqs:ReceiveMessage
            - sqs:SendMessage
            - sqs:GetQueueUrl
            Effect: Allow
            Resource:
            - "*"
            Sid: StmtMinSQS
          - Action:
            - rds:DescribeDBInstances
            Effect: Allow
            Resource:
            - "*"
            Sid: StmtMinRDS
          - Action:
            - ec2:CreateSnapshot
            - ec2:CreateTags
            - ec2:DescribeInstances
            - ec2:DescribeVolumes
            Effect: Allow
            Resource:
            - "*"
            Sid: StmtMinEC2
          - Action:
            - sns:ListTopics
            - sns:CreateTopic
            - sns:Publish
            Effect: Allow
            Resource:
            - "*"
            Sid: StmtMinSNS
          - Action:
            - cloudwatch:PutMetricData
            - cloudwatch:ListMetrics
            Effect: Allow
            Resource:
            - "*"
            Sid: StmtMinCloudwatch
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogStreams
            Effect: Allow
            Resource:
            - Fn::If:
              - IsGovCloud
              - arn:aws-us-gov:logs:*:*:*
              - arn:aws:logs:*:*:*
            Sid: StmtMinCloudwatchLogs
          - Action:
            - kms:ListAliases
            - kms:Encrypt
            - kms:Decrypt
            Effect: Allow
            Resource:
            - "*"
            Sid: StmtMinKMS
          - Action:
            - dynamodb:ListTables
            - dynamodb:DescribeTable
            - dynamodb:Scan
            Effect: Allow
            Resource: "*"
            Sid: StmtMinDynamoDB
          - Action:
            - dms:CreateEndpoint
            - dms:CreateReplicationTask
            - dms:DeleteEndpoint
            - dms:DeleteReplicationTask
            - dms:DescribeConnections
            - dms:DescribeEndpoints
            - dms:DescribeReplicationInstances
            - dms:DescribeReplicationTasks
            - dms:ModifyEndpoint
            - dms:StartReplicationTask
            - dms:StopReplicationTask
            - dms:TestConnection
            - ec2:DescribeRegions
            - iam:ListRoles
            - iam:PassRole
            - lambda:AddPermission
            - lambda:CreateFunction
            - lambda:DeleteFunction
            - lambda:GetFunction
            - lambda:GetPolicy
            - lambda:RemovePermission
            - lambda:UpdateFunctionCode
            - lambda:UpdateFunctionConfiguration
            - s3:GetBucketNotification
            - s3:ListAllMyBuckets
            - s3:PutBucketNotification
            - sqs:ChangeMessageVisibility
            - sqs:DeleteMessage
            - sqs:ListQueues
            - sqs:ReceiveMessage
            Effect: Allow
            Resource: "*"
            Sid: CDCPermissions
        PolicyName: !Sub ["${RootStack}-MatillionRolePolicy", RootStack: !Select [0, !Split ['-', !Ref 'AWS::StackName']]]
    Type: AWS::IAM::Role
    
Outputs:
  DefaultMatillionUsername:
    Description: Default Matillion Username
    Value: ec2-user
  MatillionEc2InstancePrivateEndpoint:
    Description: Private Endpoint for Matillion Instance
    Value:
      Fn::GetAtt:
      - MatillionEc2Instance
      - PrivateIp
  MatillionEc2InstancePublicEndpoint:
    Description: Public Endpoint for Matillion Instance
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - MatillionEc2Instance
          - PublicDnsName
  MatillionEc2InstanceId:
    Description: Instance ID (default password)
    Value:
      Ref: MatillionEc2Instance
  RDSJDBCConnectionString:
    Description: JDBC connection string for Matillion Aurora/Postgres DB
    Value:
      Fn::Join:
      - ''
      - - jdbc:postgresql://
        - Fn::GetAtt:
          - AuroraStack
          - Outputs.RDSEndPointAddress
        - ":"
        - Fn::GetAtt:
          - AuroraStack
          - Outputs.RDSEndPointPort
        - "/"
        - Ref: PGDBName